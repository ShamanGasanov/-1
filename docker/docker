Конспект по Docker: Основы и базовые понятия
1. Что такое Docker?
•	Docker — это платформа для разработки, доставки и запуска приложений в контейнерах.
•	Контейнер — это изолированная среда, которая содержит всё необходимое для работы приложения: код, библиотеки, зависимости и runtime.
•	Docker позволяет упаковывать приложения и их зависимости в легковесные, переносимые контейнеры, которые могут работать на любой системе с Docker.
2. Основные понятия
•	Docker Image (Образ):
o	Это шаблон для создания контейнеров. Образ содержит всё необходимое для запуска приложения: код, runtime, библиотеки, переменные окружения и т.д.
o	Образы создаются на основе Dockerfile — текстового файла с инструкциями для сборки образа.
•	Docker Container (Контейнер):
o	Это запущенный экземпляр образа. Контейнер изолирован от других контейнеров и хостовой системы.
•	Dockerfile:
o	Файл с инструкциями для сборки образа. Содержит команды, которые описывают, как создать образ.
•	Docker Hub:
o	Репозиторий для хранения и обмена Docker-образами. Можно использовать готовые образы или загружать свои.
3. Установка Docker
•	Установка Docker зависит от операционной системы:
o	Linux: Установка через пакетный менеджер (apt, yum и т.д.).
o	Windows/macOS: Установка через Docker Desktop.
•	После установки проверьте работу Docker командой:
docker --version
4. Основные команды Docker
•	Запуск контейнера:
docker run <имя_образа>
Пример:
docker run hello-world
•	Просмотр запущенных контейнеров:
docker ps
Для просмотра всех контейнеров (включая остановленные):
docker ps -a
•	Остановка контейнера:
docker stop <контейнер_id>
•	Удаление контейнера:
docker rm <контейнер_id>
•	Просмотр образов:
docker images
•	Удаление образа:
docker rmi <имя_образа>
•	Сборка образа из Dockerfile:
docker build -t <имя_образа> .
5. Dockerfile
•	Пример простого Dockerfile:
# Используем базовый образ
FROM ubuntu:latest

# Устанавливаем необходимые пакеты
RUN apt-get update && apt-get install -y python3

# Копируем файлы приложения в контейнер
COPY . /app

# Устанавливаем рабочую директорию
WORKDIR /app

# Команда для запуска приложения
CMD ["python3", "app.py"]
•	Основные инструкции:
o	FROM: Указывает базовый образ.
o	RUN: Выполняет команду в контейнере.
o	COPY: Копирует файлы из хоста в контейнер.
o	WORKDIR: Устанавливает рабочую директорию.
o	CMD: Указывает команду, которая будет выполнена при запуске контейнера.
6. Сети и тома в Docker
•	Сети:
o	Docker позволяет создавать изолированные сети для контейнеров.
o	Пример создания сети:
docker-compose up
•	Остановка:
docker-compose down
8. Лучшие практики
•	Используйте легковесные базовые образы (например, alpine).
•	Минимизируйте количество слоев в Dockerfile.
•	Используйте .dockerignore для исключения ненужных файлов при сборке образа.
•	Не запускайте процессы от имени root внутри контейнера.
•	Используйте тома для хранения данных, которые должны сохраняться после удаления контейнера.

